{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Desktop/complete gicagricam/client/src/components/Products.js\",\n    _s = $RefreshSig$();\n\n// import React, { useEffect, useState } from 'react'\n// import styled from 'styled-components'\n// import { popularProducts } from '../data'\n// import Product from './Product'\n// import axios from 'axios'\n// const Container = styled.div`\n// display:flex;\n// padding:20px;\n// flex-wrap:wrap;\n// justify-content:space-between;\n// `\n// function Products({cat, filters, sort}) {\n// // const [products, setProducts] = useState([]);\n// // const [filteredProducts, setFilteredProducts] = useState([]);\n// // useEffect(() =>{\n// //     const getProducts =async ()=>{\n// //         try {\n// //             const res = await axios.get(cat ? `http://localhost:5000/api/products?catergory=${cat}` : \"http://localhost:5000/api/products\");\n// //             // const res = await axios.get(\"http://localhost:5000/api/products\")\n// //             console.log(res);\n// //             setProducts(res.data)\n// //         } catch (error) {\n// //         }\n// //     }\n// //     getProducts();\n// // },[cat]);\n// // useEffect(() =>{\n// //     cat && setFilteredProducts(\n// //         products.filter(item=>Object.entries(filters).every(([key, value]) =>\n// //         item[key].includes(value)\n// //         ))\n// //     );\n// // }, [products, cat, filters]);\n// // useEffect(()=>{\n// //     if((sort === \"newest\")){\n// //         setFilteredProducts((prev) =>\n// //         [...prev].sort((a, b) => a.created - b.created)\n// //         )\n// //     }\n// // })\n// // useEffect(() => {\n// //     if (sort === \"newest\") {\n// //       setFilteredProducts((prev) =>\n// //         [...prev].sort((a, b) => a.createdAt - b.createdAt)\n// //       );\n// //     } else if (sort === \"asc\") {\n// //       setFilteredProducts((prev) =>\n// //         [...prev].sort((a, b) => a.price - b.price)\n// //       );\n// //     } else {\n// //       setFilteredProducts((prev) =>\n// //         [...prev].sort((a, b) => b.price - a.price)\n// //       );\n// //     }\n// //   }, [sort]);\n// const [products, setProducts] = useState([]);\n//   const [filteredProducts, setFilteredProducts] = useState([]);\n//   useEffect(() => {\n//     const getProducts = async () => {\n//       try {\n//         const res = await axios.get(\n//           cat\n//             ? `http://localhost:5000/api/products?category=${cat}`\n//             : \"http://localhost:5000/api/products\"\n//         );\n//         setProducts(res.data);\n//       } catch (err) {}\n//     };\n//     getProducts();\n//   }, [cat]);\n//   useEffect(() => {\n//     cat &&\n//       setFilteredProducts(\n//         products.filter((item) =>\n//           Object.entries(filters).every(([key, value]) =>\n//             item[key].includes(value)\n//           )\n//         )\n//       );\n//   }, [products, cat, filters]);\n//   useEffect(() => {\n//     if (sort === \"newest\") {\n//       setFilteredProducts((prev) =>\n//         [...prev].sort((a, b) => a.createdAt - b.createdAt)\n//       );\n//     } else if (sort === \"asc\") {\n//       setFilteredProducts((prev) =>\n//         [...prev].sort((a, b) => a.price - b.price)\n//       );\n//     } else {\n//       setFilteredProducts((prev) =>\n//         [...prev].sort((a, b) => b.price - a.price)\n//       );\n//     }\n//   }, [sort]);\n//     return (\n//         // <Container>\n//         //    {cat ? filteredProducts.map((items)=>\n//         //        <Product item={items} key={items.id} />\n//         //    ) : products.slice(0, 8).map((items)=>(\n//         //     <Product item={items} key={items.id} />\n//         // ))} \n//         // </Container>\n//         <Container>\n//       {cat\n//         ? filteredProducts.map((item) => <Product item={item} key={item.id} />)\n//         : popularProducts\n//             .slice(0, 8)\n//             .map((item) => <Product item={item} key={item.id} />)}\n//     </Container>\n//     )\n// }\n// export default Products\nimport { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { popularProducts } from \"../data\";\nimport Product from \"./Product\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Container = styled.div`\n  padding: 20px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n`;\n_c = Container;\n\nconst Products = _ref => {\n  _s();\n\n  let {\n    cat,\n    filters,\n    sort\n  } = _ref;\n  const [products, setProducts] = useState([]);\n  const [filteredProducts, setFilteredProducts] = useState([]);\n  useEffect(() => {\n    const getProducts = async () => {\n      try {\n        const res = await axios.get(cat ? `http://localhost:5000/api/products?category=${cat}` : \"http://localhost:5000/api/products\");\n        setProducts(res.data);\n      } catch (err) {}\n    };\n\n    getProducts();\n  }, [cat]);\n  useEffect(() => {\n    cat && setFilteredProducts(products.filter(item => Object.entries(filters).every(_ref2 => {\n      let [key, value] = _ref2;\n      return item[key].includes(value);\n    })));\n  }, [products, cat, filters]);\n  useEffect(() => {\n    if (sort === \"newest\") {\n      setFilteredProducts(prev => [...prev].sort((a, b) => a.createdAt - b.createdAt));\n    } else if (sort === \"asc\") {\n      setFilteredProducts(prev => [...prev].sort((a, b) => a.price - b.price));\n    } else {\n      setFilteredProducts(prev => [...prev].sort((a, b) => b.price - a.price));\n    }\n  }, [sort]);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: cat ? filteredProducts.map(item => /*#__PURE__*/_jsxDEV(Product, {\n      item: item\n    }, item.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 42\n    }, this)) : products.slice(0, 8).map(item => /*#__PURE__*/_jsxDEV(Product, {\n      item: item\n    }, item.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 28\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 192,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Products, \"K1gQB4m1/iw3k3jmt5rFCbNdg2E=\");\n\n_c2 = Products;\nexport default Products;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"Products\");","map":{"version":3,"sources":["/Users/mac/Desktop/complete gicagricam/client/src/components/Products.js"],"names":["useEffect","useState","styled","popularProducts","Product","axios","Container","div","Products","cat","filters","sort","products","setProducts","filteredProducts","setFilteredProducts","getProducts","res","get","data","err","filter","item","Object","entries","every","key","value","includes","prev","a","b","createdAt","price","map","id","slice"],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,eAAT,QAAgC,SAAhC;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,SAAS,GAAGJ,MAAM,CAACK,GAAI;AAC7B;AACA;AACA;AACA;AACA,CALA;KAAMD,S;;AAON,MAAME,QAAQ,GAAG,QAA4B;AAAA;;AAAA,MAA3B;AAAEC,IAAAA,GAAF;AAAOC,IAAAA,OAAP;AAAgBC,IAAAA;AAAhB,GAA2B;AAC3C,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BZ,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACa,gBAAD,EAAmBC,mBAAnB,IAA0Cd,QAAQ,CAAC,EAAD,CAAxD;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMgB,WAAW,GAAG,YAAY;AAC9B,UAAI;AACF,cAAMC,GAAG,GAAG,MAAMZ,KAAK,CAACa,GAAN,CAChBT,GAAG,GACE,+CAA8CA,GAAI,EADpD,GAEC,oCAHY,CAAlB;AAKAI,QAAAA,WAAW,CAACI,GAAG,CAACE,IAAL,CAAX;AACD,OAPD,CAOE,OAAOC,GAAP,EAAY,CAAE;AACjB,KATD;;AAUAJ,IAAAA,WAAW;AACZ,GAZQ,EAYN,CAACP,GAAD,CAZM,CAAT;AAcAT,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,GAAG,IACDM,mBAAmB,CACjBH,QAAQ,CAACS,MAAT,CAAiBC,IAAD,IACdC,MAAM,CAACC,OAAP,CAAed,OAAf,EAAwBe,KAAxB,CAA8B;AAAA,UAAC,CAACC,GAAD,EAAMC,KAAN,CAAD;AAAA,aAC5BL,IAAI,CAACI,GAAD,CAAJ,CAAUE,QAAV,CAAmBD,KAAnB,CAD4B;AAAA,KAA9B,CADF,CADiB,CADrB;AAQD,GATQ,EASN,CAACf,QAAD,EAAWH,GAAX,EAAgBC,OAAhB,CATM,CAAT;AAWAV,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIW,IAAI,KAAK,QAAb,EAAuB;AACrBI,MAAAA,mBAAmB,CAAEc,IAAD,IAClB,CAAC,GAAGA,IAAJ,EAAUlB,IAAV,CAAe,CAACmB,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAACE,SAAF,GAAcD,CAAC,CAACC,SAAzC,CADiB,CAAnB;AAGD,KAJD,MAIO,IAAIrB,IAAI,KAAK,KAAb,EAAoB;AACzBI,MAAAA,mBAAmB,CAAEc,IAAD,IAClB,CAAC,GAAGA,IAAJ,EAAUlB,IAAV,CAAe,CAACmB,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAACG,KAAF,GAAUF,CAAC,CAACE,KAArC,CADiB,CAAnB;AAGD,KAJM,MAIA;AACLlB,MAAAA,mBAAmB,CAAEc,IAAD,IAClB,CAAC,GAAGA,IAAJ,EAAUlB,IAAV,CAAe,CAACmB,CAAD,EAAIC,CAAJ,KAAUA,CAAC,CAACE,KAAF,GAAUH,CAAC,CAACG,KAArC,CADiB,CAAnB;AAGD;AACF,GAdQ,EAcN,CAACtB,IAAD,CAdM,CAAT;AAgBA,sBACE,QAAC,SAAD;AAAA,cACGF,GAAG,GACAK,gBAAgB,CAACoB,GAAjB,CAAsBZ,IAAD,iBAAU,QAAC,OAAD;AAAS,MAAA,IAAI,EAAEA;AAAf,OAA0BA,IAAI,CAACa,EAA/B;AAAA;AAAA;AAAA;AAAA,YAA/B,CADA,GAEAvB,QAAQ,CACLwB,KADH,CACS,CADT,EACY,CADZ,EAEGF,GAFH,CAEQZ,IAAD,iBAAU,QAAC,OAAD;AAAS,MAAA,IAAI,EAAEA;AAAf,OAA0BA,IAAI,CAACa,EAA/B;AAAA;AAAA;AAAA;AAAA,YAFjB;AAHN;AAAA;AAAA;AAAA;AAAA,UADF;AASD,CAtDD;;GAAM3B,Q;;MAAAA,Q;AAwDN,eAAeA,QAAf","sourcesContent":["// import React, { useEffect, useState } from 'react'\r\n// import styled from 'styled-components'\r\n// import { popularProducts } from '../data'\r\n// import Product from './Product'\r\n// import axios from 'axios'\r\n\r\n// const Container = styled.div`\r\n// display:flex;\r\n// padding:20px;\r\n// flex-wrap:wrap;\r\n// justify-content:space-between;\r\n// `\r\n// function Products({cat, filters, sort}) {\r\n    \r\n// // const [products, setProducts] = useState([]);\r\n// // const [filteredProducts, setFilteredProducts] = useState([]);\r\n\r\n// // useEffect(() =>{\r\n// //     const getProducts =async ()=>{\r\n    \r\n// //         try {\r\n// //             const res = await axios.get(cat ? `http://localhost:5000/api/products?catergory=${cat}` : \"http://localhost:5000/api/products\");\r\n// //             // const res = await axios.get(\"http://localhost:5000/api/products\")\r\n// //             console.log(res);\r\n// //             setProducts(res.data)\r\n// //         } catch (error) {\r\n            \r\n// //         }\r\n// //     }\r\n// //     getProducts();\r\n// // },[cat]);\r\n\r\n// // useEffect(() =>{\r\n// //     cat && setFilteredProducts(\r\n// //         products.filter(item=>Object.entries(filters).every(([key, value]) =>\r\n// //         item[key].includes(value)\r\n// //         ))\r\n// //     );\r\n// // }, [products, cat, filters]);\r\n\r\n// // useEffect(()=>{\r\n// //     if((sort === \"newest\")){\r\n// //         setFilteredProducts((prev) =>\r\n// //         [...prev].sort((a, b) => a.created - b.created)\r\n// //         )\r\n// //     }\r\n// // })\r\n// // useEffect(() => {\r\n// //     if (sort === \"newest\") {\r\n// //       setFilteredProducts((prev) =>\r\n// //         [...prev].sort((a, b) => a.createdAt - b.createdAt)\r\n// //       );\r\n// //     } else if (sort === \"asc\") {\r\n// //       setFilteredProducts((prev) =>\r\n// //         [...prev].sort((a, b) => a.price - b.price)\r\n// //       );\r\n// //     } else {\r\n// //       setFilteredProducts((prev) =>\r\n// //         [...prev].sort((a, b) => b.price - a.price)\r\n// //       );\r\n// //     }\r\n// //   }, [sort]);\r\n\r\n\r\n\r\n\r\n// const [products, setProducts] = useState([]);\r\n//   const [filteredProducts, setFilteredProducts] = useState([]);\r\n\r\n//   useEffect(() => {\r\n//     const getProducts = async () => {\r\n//       try {\r\n//         const res = await axios.get(\r\n//           cat\r\n//             ? `http://localhost:5000/api/products?category=${cat}`\r\n//             : \"http://localhost:5000/api/products\"\r\n//         );\r\n//         setProducts(res.data);\r\n//       } catch (err) {}\r\n//     };\r\n//     getProducts();\r\n//   }, [cat]);\r\n\r\n//   useEffect(() => {\r\n//     cat &&\r\n//       setFilteredProducts(\r\n//         products.filter((item) =>\r\n//           Object.entries(filters).every(([key, value]) =>\r\n//             item[key].includes(value)\r\n//           )\r\n//         )\r\n//       );\r\n//   }, [products, cat, filters]);\r\n\r\n//   useEffect(() => {\r\n//     if (sort === \"newest\") {\r\n//       setFilteredProducts((prev) =>\r\n//         [...prev].sort((a, b) => a.createdAt - b.createdAt)\r\n//       );\r\n//     } else if (sort === \"asc\") {\r\n//       setFilteredProducts((prev) =>\r\n//         [...prev].sort((a, b) => a.price - b.price)\r\n//       );\r\n//     } else {\r\n//       setFilteredProducts((prev) =>\r\n//         [...prev].sort((a, b) => b.price - a.price)\r\n//       );\r\n//     }\r\n//   }, [sort]);\r\n\r\n\r\n\r\n//     return (\r\n//         // <Container>\r\n//         //    {cat ? filteredProducts.map((items)=>\r\n//         //        <Product item={items} key={items.id} />\r\n//         //    ) : products.slice(0, 8).map((items)=>(\r\n//         //     <Product item={items} key={items.id} />\r\n//         // ))} \r\n//         // </Container>\r\n//         <Container>\r\n//       {cat\r\n//         ? filteredProducts.map((item) => <Product item={item} key={item.id} />)\r\n//         : popularProducts\r\n//             .slice(0, 8)\r\n//             .map((item) => <Product item={item} key={item.id} />)}\r\n//     </Container>\r\n//     )\r\n// }\r\n\r\n// export default Products\r\n\r\nimport { useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { popularProducts } from \"../data\";\r\nimport Product from \"./Product\";\r\nimport axios from \"axios\";\r\n\r\nconst Container = styled.div`\r\n  padding: 20px;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: space-between;\r\n`;\r\n\r\nconst Products = ({ cat, filters, sort }) => {\r\n  const [products, setProducts] = useState([]);\r\n  const [filteredProducts, setFilteredProducts] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const getProducts = async () => {\r\n      try {\r\n        const res = await axios.get(\r\n          cat\r\n            ? `http://localhost:5000/api/products?category=${cat}`\r\n            : \"http://localhost:5000/api/products\"\r\n        );\r\n        setProducts(res.data);\r\n      } catch (err) {}\r\n    };\r\n    getProducts();\r\n  }, [cat]);\r\n\r\n  useEffect(() => {\r\n    cat &&\r\n      setFilteredProducts(\r\n        products.filter((item) =>\r\n          Object.entries(filters).every(([key, value]) =>\r\n            item[key].includes(value)\r\n          )\r\n        )\r\n      );\r\n  }, [products, cat, filters]);\r\n\r\n  useEffect(() => {\r\n    if (sort === \"newest\") {\r\n      setFilteredProducts((prev) =>\r\n        [...prev].sort((a, b) => a.createdAt - b.createdAt)\r\n      );\r\n    } else if (sort === \"asc\") {\r\n      setFilteredProducts((prev) =>\r\n        [...prev].sort((a, b) => a.price - b.price)\r\n      );\r\n    } else {\r\n      setFilteredProducts((prev) =>\r\n        [...prev].sort((a, b) => b.price - a.price)\r\n      );\r\n    }\r\n  }, [sort]);\r\n\r\n  return (\r\n    <Container>\r\n      {cat\r\n        ? filteredProducts.map((item) => <Product item={item} key={item.id} />)\r\n        : products\r\n            .slice(0, 8)\r\n            .map((item) => <Product item={item} key={item.id} />)}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Products;\r\n\r\n"]},"metadata":{},"sourceType":"module"}